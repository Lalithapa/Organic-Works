<div class="media-group-wrapper d-flex-center">
  <div class="media-group-portion d-flex-center">
    <div class="group-image-wrapper d-flex-center">
      {% assign imageSetting1 = section.settings['image-1'] %}
      {% if imageSetting1.alt %}
        {% assign imageAlt = imageSetting1.alt %}
      {% else %}
        {% assign imageAlt = 'organic works shop product' %}
      {% endif %}

      <img
        src="{{ imageSetting1 |  image_url }}"
        width="100%"
        height="100%"
        class="group-image"
        loading="lazy"
        alt="{{ imageAlt }}"
        id="{{ imageSetting1.id }}"
      >

      <a href="{{section.settings['url-1']}}" class="group-image-text-wrapper d-flex-center">
        <p class="group-image-text">{{ section.settings['text-1'] }}</p>
        {% render 'carousel-next-btn-white' %}
      </a>
    </div>
  </div>

  <div class="media-group-portion d-flex-center">
    <div class="group-image-wrapper">
      {% assign imageSetting2 = section.settings['image-2'] %}
      {% if imageSetting2.alt %}
        {% assign imageAlt = imageSetting2.alt %}
      {% else %}
        {% assign imageAlt = 'organic works shop product' %}
      {% endif %}

      <img
        src="{{ imageSetting2 |  image_url }}"
        width="100%"
        height="100%"
        class="group-image d-flex-center"
        loading="lazy"
        alt="{{ imageAlt }}"
        id="{{ imageSetting2.id }}"
      >

      <a href="{{section.settings['url-2']}}" class="group-image-text-wrapper d-flex-center">
        <p class="group-image-text">{{ section.settings['text-2'] }}</p>
        {% render 'carousel-next-btn-white' %}
      </a>
    </div>
  </div>
</div>

<script type="text/javascript" defer>
  $(document).ready(function () {
    const observer = new IntersectionObserver(
      function (entries) {
        entries.forEach(function (entry) {
          // If the element is in the viewport
          if (entry.isIntersecting) {
            $(entry.target).find('.group-image-wrapper').addClass('group-image-scale-one');
          } else {
            $(entry.target).find('.group-image-wrapper').removeClass('group-image-scale-one');
          }
        });
      },
      {
        root: null, // Use the viewport as the root
        rootMargin: '0px', // No margins
        threshold: 0.4, // Callback will run when 20% of the target is visible
      }
    );

    observer.observe(document.querySelector('.media-group-wrapper'));
  });
</script>

{% schema %}
{
  "name": "Image Group",
  "class": "image-group-section",
  "tag": "section",
  "settings": [
    {
      "type": "image_picker",
      "id": "image-1",
      "label": "Image 1"
    },
    {
      "type": "text",
      "id": "text-1",
      "label": "Image 1 Url Text",
      "default": "SHOP PRODUCT"
    },
    {
      "type": "url",
      "id": "url-1",
      "label": "Image 1 Url"
    },
    {
      "type": "image_picker",
      "id": "image-2",
      "label": "Image 2"
    },
    {
      "type": "text",
      "id": "text-2",
      "label": "Image 2 Url Text",
      "default": "SHOP PRODUCT"
    },
    {
      "type": "url",
      "id": "url-2",
      "label": "Image 2 Url"
    }
  ],
  "presets": [
    {
      "name": "Image Group"
    }
  ]
}
{% endschema %}
